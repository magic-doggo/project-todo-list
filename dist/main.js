(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>a});var r=t(354),o=t.n(r),i=t(314),d=t.n(i)()(o());d.push([e.id,"/* * {\n    border: 2px solid red;\n} */\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 9fr;\n}\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 20px 10px;\n    background-color: #949398FF;\n    color: #F4DF4EFF;\n    font-weight: bolder;\n    border: 1px solid black;\n    text-shadow: 1px 1px 1px black;\n    font-size: larger;\n}\n\nbutton {\n    border-radius: 15px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 12px 12px;\n    background-color: #F4DF4EFF;\n    box-shadow: 1px 1px 1px black;\n}\n\nform > button {\n    border-radius: 10px;\n    padding: 5px 10px;\n    margin: 5px;\n}\n\n.sidebar > p {\n    margin: 0px;\n}\n\n#projects {\n    height: 100px;\n}\n\n.selected {\n    background-color: burlywood;\n}\n\n#main {\n    background-color: #F4DF4EFF;\n}\n\n#tasks-container {\n    padding: 10px 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 10px;\n}\n\n.task {\n    display: grid;\n    border: 2px solid black;\n    box-shadow: 2px 4px 2px gray;\n    padding: 12px;\n}\n\n#dialog {\n    width: 50%;\n    background-color: rgb(255, 249, 240);\n    text-shadow: none;\n}\n\n#form > ul {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;GAEG;;AAEH;IACI,aAAa;IACb,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;IAClB,2BAA2B;IAC3B,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,8BAA8B;IAC9B,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,2BAA2B;IAC3B,6BAA6B;AACjC;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,4BAA4B;IAC5B,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,oCAAoC;IACpC,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb",sourcesContent:["/* * {\n    border: 2px solid red;\n} */\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 9fr;\n}\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 20px 10px;\n    background-color: #949398FF;\n    color: #F4DF4EFF;\n    font-weight: bolder;\n    border: 1px solid black;\n    text-shadow: 1px 1px 1px black;\n    font-size: larger;\n}\n\nbutton {\n    border-radius: 15px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 12px 12px;\n    background-color: #F4DF4EFF;\n    box-shadow: 1px 1px 1px black;\n}\n\nform > button {\n    border-radius: 10px;\n    padding: 5px 10px;\n    margin: 5px;\n}\n\n.sidebar > p {\n    margin: 0px;\n}\n\n#projects {\n    height: 100px;\n}\n\n.selected {\n    background-color: burlywood;\n}\n\n#main {\n    background-color: #F4DF4EFF;\n}\n\n#tasks-container {\n    padding: 10px 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 10px;\n}\n\n.task {\n    display: grid;\n    border: 2px solid black;\n    box-shadow: 2px 4px 2px gray;\n    padding: 12px;\n}\n\n#dialog {\n    width: 50%;\n    background-color: rgb(255, 249, 240);\n    text-shadow: none;\n}\n\n#form > ul {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}"],sourceRoot:""}]);const a=d},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&d[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),n.push(s))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},d=[],a=0;a<e.length;a++){var c=e[a],l=r.base?c[0]+r.base:c[0],s=i[l]||0,p="".concat(l," ").concat(s);i[l]=s+1;var u=t(p),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(A);else{var m=o(A,r);r.byIndex=a,n.splice(a,0,{identifier:p,updater:m,references:1})}d.push(p)}return d}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var a=t(i[d]);n[a].references--}for(var c=r(e,o),l=0;l<i.length;l++){var s=t(i[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=c}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var r={};(()=>{t.d(r,{x:()=>b,K:()=>y});class e{constructor(e,n,t,r,o){this._title=e,this._description=n,this._dueDate=t,this._priority=r,this._project=o}get title(){return this._title}get description(){return this._description}get dueDate(){return this._dueDate}get priority(){return this._priority}get project(){return this._project}}let n=0;document.getElementById("main");const o=function(){let e=0;const n=document.getElementById("tasks-container");for(;n.firstChild;)n.removeChild(n.firstChild);for(let t in b){console.log(b+""+e);let r=document.createElement("div");document.getElementById("tasks-container").appendChild(r),r.classList.add("task");let i=document.createElement("div");r.appendChild(i),console.log(e),i.innerHTML="Title: "+Object.values(b)[e].title;let d=document.createElement("div");r.appendChild(d),d.innerHTML="Description: "+Object.values(b)[e].description;let a=document.createElement("div");function c(){delete b[t],o()}r.appendChild(a),a.innerHTML="DueDate: "+Object.values(b)[e].dueDate,a.addEventListener("click",c);let l=document.createElement("div");r.appendChild(l),l.innerHTML="Priority: "+Object.values(b)[e].priority;let s=document.createElement("div");r.appendChild(s),s.innerHTML="Project: "+Object.values(b)[e].project,e++}};class i{constructor(e){this._projectName=e}get projectName(){return this._projectName}}let d=function(){let e=document.getElementsByClassName("selected");for(;e[0];)e[0].classList.remove("selected")},a=(document.querySelectorAll(".project"),function(e){let n=0;const t=document.getElementById("projects");for(;t.firstChild;)t.removeChild(t.firstChild);const r=document.getElementById("project");for(;r.childNodes.length>1;)r.removeChild(r.lastChild);for(let o in y){let o=document.createElement("li");t.appendChild(o),o.classList.add("project"),o.innerHTML=e[n].projectName;let i=document.createElement("option");r.appendChild(i),i.innerHTML=e[n].projectName,n++}!function(){let e;document.querySelectorAll(".project").forEach((n=>{n.addEventListener("click",(function t(r){d(),n.classList.add("selected");let o=0,i=document.getElementById("tasks-container");for(;i.firstChild;)i.removeChild(i.firstChild);e=n.innerText;for(let a in b){if(e==Object.values(b)[o].project){let c=document.createElement("div");document.getElementById("tasks-container").appendChild(c),c.classList.add("task");let l=document.createElement("div");c.appendChild(l),l.innerHTML="Title: "+Object.values(b)[o].title;let s=document.createElement("div");c.appendChild(s),s.innerHTML="Description: "+Object.values(b)[o].description;let p=document.createElement("div");function u(){delete b[a],t()}c.appendChild(p),p.innerHTML="DueDate: "+Object.values(b)[o].dueDate,p.addEventListener("click",u);let A=document.createElement("div");c.appendChild(A),A.innerHTML="Priority: "+Object.values(b)[o].priority;let m=document.createElement("div");c.appendChild(m),m.innerHTML="Project: "+Object.values(b)[o].project}o++}}))}))}()});var c=t(72),l=t.n(c),s=t(825),p=t.n(s),u=t(659),A=t.n(u),m=t(56),f=t.n(m),g=t(540),h=t.n(g),v=t(113),C=t.n(v),B=t(208),x={};x.styleTagTransform=C(),x.setAttributes=f(),x.insert=A().bind(null,"head"),x.domAPI=p(),x.insertStyleElement=h(),l()(B.A,x),B.A&&B.A.locals&&B.A.locals,console.log("12345");let b={},y=[];const I=document.getElementById("new-todo"),E=document.getElementById("dialog"),j=document.getElementById("cancel-Btn"),k=document.getElementById("confirm-Btn"),L=document.getElementById("form"),T=document.getElementById("all-tasks"),w=document.getElementById("create-new-project");let F=document.getElementById("project-form"),M=document.getElementById("tasks-container");I.addEventListener("click",(()=>{E.showModal()})),j.addEventListener("click",(()=>{E.close("test cancel string where do i see this")})),k.addEventListener("click",(function(){let t=document.getElementById("title").value,r=document.getElementById("description").value,o=document.getElementById("due-date").value,i=document.getElementById("priority").value,d=document.getElementById("project").value,a=new e(t,r,o,i,d);return!0===L.checkValidity()&&(function(e,t){t[n]=e,n++}(a,b),console.log(b),function(e,n){let t=document.getElementsByClassName("selected");if(e.project==t[0].innerHTML||"All To-Dos"==t[0].innerHTML||"Project: "+e.project==n.firstChild.lastChild.innerText){let n=document.createElement("div");document.getElementById("tasks-container").appendChild(n),n.classList.add("task");let t=document.createElement("div");n.appendChild(t),t.innerHTML="Title: "+e.title;let r=document.createElement("div");n.appendChild(r),r.innerHTML="Description: "+e.description;let o=document.createElement("div");n.appendChild(o),o.innerHTML="DueDate: "+e.dueDate;let i=document.createElement("div");n.appendChild(i),i.innerHTML="Priority: "+e.priority;let d=document.createElement("div");n.appendChild(d),d.innerHTML="Project: "+e.project}}(a,M),document.querySelector("form").reset(),E.close(),document.getElementById("title").required=!1),a})),I.addEventListener("click",(()=>{E.showModal(),document.getElementById("title").required=!0})),T.addEventListener("click",(()=>{d(),T.classList.add("selected"),o()})),w.addEventListener("click",(function(e){let n=document.getElementById("new-project").value;if(!0===F.checkValidity()){e.preventDefault();let t=new i(n);y.push(t),console.log(y),document.getElementById("project-form").reset(),a(y)}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,