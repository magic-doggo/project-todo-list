(()=>{"use strict";var e={d:(t,n)=>{for(var d in n)e.o(n,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:n[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{x:()=>l,K:()=>o});class t{constructor(e,t,n,d,l){this._title=e,this._description=t,this._dueDate=n,this._priority=d,this._project=l}get title(){return this._title}get description(){return this._description}get dueDate(){return this._dueDate}get priority(){return this._priority}get project(){return this._project}}let n=0;document.getElementById("main");class d{constructor(e){this._projectName=e}get projectName(){return this._projectName}}document.querySelectorAll(".project");console.log("12345");let l={},o=[];const i=document.getElementById("new-todo"),c=document.getElementById("dialog"),r=document.getElementById("cancel-Btn"),m=document.getElementById("confirm-Btn"),s=document.getElementById("form"),a=document.getElementById("all-tasks"),u=document.getElementById("create-new-project");let p=document.getElementById("project-form");i.addEventListener("click",(()=>{c.showModal()})),r.addEventListener("click",(()=>{c.close("test cancel string where do i see this")})),m.addEventListener("click",(function(){let e=document.getElementById("title").value,d=document.getElementById("description").value,o=document.getElementById("due-date").value,i=document.getElementById("priority").value,r=document.getElementById("project").value,m=new t(e,d,o,i,r);return!0===s.checkValidity()&&(function(e,t){t[n]=e,n++}(m,l),console.log(l),document.querySelector("form").reset(),c.close(),document.getElementById("title").required=!1),m})),i.addEventListener("click",(()=>{c.showModal(),document.getElementById("title").required=!0})),a.addEventListener("click",(()=>{!function(){let e=0;const t=document.getElementById("tasks-container");for(;t.firstChild;)t.removeChild(t.firstChild);for(let t in l){let t=document.createElement("div");document.getElementById("tasks-container").appendChild(t),t.classList.add("task");let n=document.createElement("div");t.appendChild(n),n.innerHTML=l[e].title;let d=document.createElement("div");t.appendChild(d),d.innerHTML=l[e].description;let o=document.createElement("div");t.appendChild(o),o.innerHTML=l[e].dueDate;let i=document.createElement("div");t.appendChild(i),i.innerHTML=l[e].priority,e++}}()})),u.addEventListener("click",(function(e){let t=document.getElementById("new-project").value;if(!0===p.checkValidity()){e.preventDefault();let n=new d(t);o.push(n),console.log(o),document.getElementById("project-form").reset(),function(e){let t=0;const n=document.getElementById("projects");for(;n.firstChild;)n.removeChild(n.firstChild);const d=document.getElementById("project");for(;d.childNodes.length>1;)console.log(d.lastChild.value),console.log(d.childNodes.length),d.removeChild(d.lastChild);let i=document.createElement("div");document.getElementById("tasks-container").appendChild(i),i.classList.add("task");for(let l in o){let l=document.createElement("div");n.appendChild(l),l.classList.add("project"),l.innerHTML=e[t].projectName;let o=document.createElement("option");d.appendChild(o),o.innerHTML=e[t].projectName,t++}!function(){let e;document.querySelectorAll(".project").forEach((t=>{t.addEventListener("click",(function(n){console.log(e);let d=0;const o=document.getElementById("tasks-container");for(;o.firstChild;)o.removeChild(o.firstChild);e=t.innerText,console.log(e);for(let t in l)if(e==l[d].project){let e=document.createElement("div");document.getElementById("tasks-container").appendChild(e),e.classList.add("task");let t=document.createElement("div");e.appendChild(t),t.innerHTML=l[d].title;let n=document.createElement("div");e.appendChild(n),n.innerHTML=l[d].description;let o=document.createElement("div");e.appendChild(o),o.innerHTML=l[d].dueDate;let i=document.createElement("div");e.appendChild(i),i.innerHTML=l[d].priority,d++}}))}))}()}(o)}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,