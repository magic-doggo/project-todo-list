(()=>{"use strict";var e={208:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(354),r=n.n(o),i=n(314),d=n.n(i)()(r());d.push([e.id,"/* * {\n    border: 2px solid red;\n} */\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 9fr;\n}\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 20px 10px;\n    background-color: #949398FF;\n    color: #F4DF4EFF;\n    font-weight: bolder;\n    border: 1px solid black;\n    text-shadow: 1px 1px 1px black;\n    font-size: larger;\n}\n\nbutton {\n    border-radius: 15px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 12px 12px;\n    background-color: #F4DF4EFF;\n    box-shadow: 1px 1px 1px black;\n}\n\nform > button {\n    border-radius: 10px;\n    padding: 5px 10px;\n    margin: 5px;\n}\n\n.sidebar > p {\n    margin: 0px;\n}\n\n#projects {\n    height: 100px;\n}\n\n.selected {\n    background-color: burlywood;\n}\n\n#main {\n    background-color: #F4DF4EFF;\n}\n\n#tasks-container {\n    padding: 10px 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 10px;\n}\n\n.task {\n    display: grid;\n    border: 2px solid black;\n    box-shadow: 2px 4px 2px gray;\n    padding: 12px;\n}\n\n#dialog {\n    width: 50%;\n    background-color: rgb(255, 249, 240);\n    text-shadow: none;\n}\n\n#form > ul {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-me {\n    background-color: #949398FF;\n    width: 15%;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;GAEG;;AAEH;IACI,aAAa;IACb,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;IAClB,2BAA2B;IAC3B,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,8BAA8B;IAC9B,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,2BAA2B;IAC3B,6BAA6B;AACjC;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,4BAA4B;IAC5B,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,oCAAoC;IACpC,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,2BAA2B;IAC3B,UAAU;AACd",sourcesContent:["/* * {\n    border: 2px solid red;\n} */\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 9fr;\n}\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 20px 10px;\n    background-color: #949398FF;\n    color: #F4DF4EFF;\n    font-weight: bolder;\n    border: 1px solid black;\n    text-shadow: 1px 1px 1px black;\n    font-size: larger;\n}\n\nbutton {\n    border-radius: 15px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 12px 12px;\n    background-color: #F4DF4EFF;\n    box-shadow: 1px 1px 1px black;\n}\n\nform > button {\n    border-radius: 10px;\n    padding: 5px 10px;\n    margin: 5px;\n}\n\n.sidebar > p {\n    margin: 0px;\n}\n\n#projects {\n    height: 100px;\n}\n\n.selected {\n    background-color: burlywood;\n}\n\n#main {\n    background-color: #F4DF4EFF;\n}\n\n#tasks-container {\n    padding: 10px 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 10px;\n}\n\n.task {\n    display: grid;\n    border: 2px solid black;\n    box-shadow: 2px 4px 2px gray;\n    padding: 12px;\n}\n\n#dialog {\n    width: 50%;\n    background-color: rgb(255, 249, 240);\n    text-shadow: none;\n}\n\n#form > ul {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-me {\n    background-color: #949398FF;\n    width: 15%;\n}"],sourceRoot:""}]);const a=d},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&d[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},d=[],a=0;a<e.length;a++){var c=e[a],l=o.base?c[0]+o.base:c[0],s=i[l]||0,p="".concat(l," ").concat(s);i[l]=s+1;var u=n(p),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=r(A,o);o.byIndex=a,t.splice(a,0,{identifier:p,updater:m,references:1})}d.push(p)}return d}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var a=n(i[d]);t[a].references--}for(var c=o(e,r),l=0;l<i.length;l++){var s=n(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=c}}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{x:()=>v,K:()=>x});class e{constructor(e,t,n,o,r){this._title=e,this._description=t,this._dueDate=n,this._priority=o,this._project=r}get title(){return this._title}get description(){return this._description}get dueDate(){return this._dueDate}get priority(){return this._priority}get project(){return this._project}}document.getElementById("main");const t=function(){let e=0;const n=document.getElementById("tasks-container");for(;n.firstChild;)n.removeChild(n.firstChild);for(let r in v){var o=document.createElement("div");document.getElementById("tasks-container").appendChild(o),o.classList.add("task");let i=document.createElement("div");o.appendChild(i),i.innerHTML="Title: "+v[e]._title,i.classList.add("title");let d=document.createElement("div");o.appendChild(d),d.innerHTML="Description: "+v[e]._description,d.classList.add("description");let a=document.createElement("div");o.appendChild(a),a.innerHTML="DueDate: "+v[e]._dueDate,a.classList.add("due-date");let c=document.createElement("div");o.appendChild(c),c.innerHTML="Priority: "+v[e]._priority,c.classList.add("priority");let l=document.createElement("div");o.appendChild(l),l.innerHTML="Project: "+v[e]._project,l.classList.add("project");let s=document.createElement("button");function p(){console.log(v),v.splice(r,1),window.localStorage.setItem("testKey",JSON.stringify(v)),console.log(v),t()}o.appendChild(s),s.innerHTML="Delete me",s.classList.add("delete-me"),s.addEventListener("click",p),e++}return o};class r{constructor(e){this._projectName=e}get projectName(){return this._projectName}}let i=function(){let e=document.getElementsByClassName("selected");for(;e[0];)e[0].classList.remove("selected")},d=(document.querySelectorAll(".project"),function(e){let t=0;const n=document.getElementById("projects");for(;n.firstChild;)n.removeChild(n.firstChild);const o=document.getElementById("project");for(;o.childNodes.length>1;)o.removeChild(o.lastChild);for(let r in x){let r=document.createElement("li");n.appendChild(r),r.classList.add("projectName"),r.innerHTML=e[t]._projectName;let i=document.createElement("option");o.appendChild(i),i.innerHTML=e[t]._projectName,t++}!function(){let e;document.querySelectorAll(".projectName").forEach((t=>{t.addEventListener("click",(function n(o){i(),t.classList.add("selected");let r=0,d=document.getElementById("tasks-container");for(;d.firstChild;)d.removeChild(d.firstChild);e=t.innerText;for(let a in v){if(e==v[r]._project){let c=document.createElement("div");document.getElementById("tasks-container").appendChild(c),c.classList.add("task");let l=document.createElement("div");c.appendChild(l),l.innerHTML="Title: "+v[r]._title;let s=document.createElement("div");c.appendChild(s),s.innerHTML="Description: "+v[r]._description;let p=document.createElement("div");c.appendChild(p),p.innerHTML="DueDate: "+v[r]._dueDate;let u=document.createElement("div");c.appendChild(u),u.innerHTML="Priority: "+v[r]._priority;let A=document.createElement("div");c.appendChild(A),A.innerHTML="Project: "+v[r]._project;let m=document.createElement("button");function f(){v.splice(a,1),window.localStorage.setItem("testKey",JSON.stringify(v)),console.log(v),n()}c.appendChild(m),m.innerHTML="Delete me",m.classList.add("delete-me"),m.addEventListener("click",f)}r++}}))}))}()}),a=function(e){let n=document.getElementsByClassName("selected");if("All To-Dos"==n[0].innerHTML)t();else if(e.project==n[0].innerHTML){console.log(e.project+"newtodo");const o=document.getElementById("tasks-container");for(;o.firstChild;)o.removeChild(o.firstChild);for(let r in v)if(console.log(r),v[r].project==n[0].innerHTML){let i=document.createElement("div");document.getElementById("tasks-container").appendChild(i),i.classList.add("task"),console.log(r);let d=document.createElement("div");i.appendChild(d),d.innerHTML="Title: "+v[r]._title,d.classList.add("title");let c=document.createElement("div");i.appendChild(c),c.innerHTML="Description: "+v[r]._description,c.classList.add("description");let l=document.createElement("div");i.appendChild(l),l.innerHTML="DueDate: "+v[r]._dueDate,l.classList.add("due-date");let s=document.createElement("div");i.appendChild(s),s.innerHTML="Priority: "+v[r]._priority,s.classList.add("priority");let p=document.createElement("div");i.appendChild(p),p.innerHTML="Project: "+v[r]._project,p.classList.add("project");let u=document.createElement("button");function A(){console.log(v),v.splice(r,1),window.localStorage.setItem("testKey",JSON.stringify(v)),console.log(v),a(e)}i.appendChild(u),u.innerHTML="Delete me",u.classList.add("delete-me"),u.addEventListener("click",A)}}};var c=n(72),l=n.n(c),s=n(825),p=n.n(s),u=n(659),A=n.n(u),m=n(56),f=n.n(m),g=n(540),h=n.n(g),C=n(113),y=n.n(C),B=n(208),I={};let v,x;if(I.styleTagTransform=y(),I.setAttributes=f(),I.insert=A().bind(null,"head"),I.domAPI=p(),I.insertStyleElement=h(),l()(B.A,I),B.A&&B.A.locals&&B.A.locals,null==localStorage.getItem("testKey"))v=[];else{let e=window.localStorage.getItem("testKey");v=JSON.parse(e)}if(null==localStorage.getItem("storedProjectList"))x=[];else{let e=window.localStorage.getItem("storedProjectList");x=JSON.parse(e)}const E=document.getElementById("new-todo"),b=document.getElementById("dialog"),L=document.getElementById("cancel-Btn"),k=document.getElementById("confirm-Btn"),w=document.getElementById("form"),j=document.getElementById("all-tasks"),T=document.getElementById("create-new-project");let F=document.getElementById("project-form");document.getElementById("tasks-container"),E.addEventListener("click",(()=>{b.showModal()})),L.addEventListener("click",(()=>{b.close("test cancel string where do i see this")})),k.addEventListener("click",(function(){let t=document.getElementById("title").value;const n=document.getElementById("description").value;let o=document.getElementById("due-date").value,r=document.getElementById("priority").value,i=document.getElementById("project").value,d=new e(t,n,o,r,i);return!0===w.checkValidity()&&(v.push(d),window.localStorage.setItem("testKey",JSON.stringify(v)),window.localStorage.getItem("testKey"),a(d),document.querySelector("form").reset(),b.close(),document.getElementById("title").required=!1),d})),E.addEventListener("click",(()=>{b.showModal(),document.getElementById("title").required=!0})),j.addEventListener("click",(()=>{i(),j.classList.add("selected"),t()})),T.addEventListener("click",(function(e){let t=document.getElementById("new-project").value;if(!0===F.checkValidity()){e.preventDefault();let n=new r(t);x.push(n),window.localStorage.setItem("storedProjectList",JSON.stringify(x)),document.getElementById("project-form").reset(),d(x)}})),d(x),t()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,